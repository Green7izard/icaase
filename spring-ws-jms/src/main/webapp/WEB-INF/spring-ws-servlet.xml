<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:sws="http://www.springframework.org/schema/web-services"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/web-services http://www.springframework.org/schema/web-services/web-services.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:jms="http://www.springframework.org/schema/jms">
    
    <context:component-scan base-package="nl.dare2date.matching"/>
    <sws:annotation-driven/>
    <tx:annotation-driven/>

    <sws:interceptors>
        <bean class="org.springframework.ws.server.endpoint.interceptor.PayloadLoggingInterceptor"/>
        <bean class="org.springframework.ws.soap.server.endpoint.interceptor.SoapEnvelopeLoggingInterceptor"/>
        <bean id="validatingInterceptor"
              class="org.springframework.ws.soap.server.endpoint.interceptor.PayloadValidatingInterceptor">
            <property name="schema" value="/matcher/messages.xsd"/>
            <property name="validateRequest" value="true"/>
            <property name="validateResponse" value="true"/>
        </bean>
    </sws:interceptors>
    
    <sws:dynamic-wsdl id="matchingService"
                      portTypeName="Calculator"
                      locationUri="/matching/"
                      targetNamespace="http://www.dare2date.nl/matching">
        <sws:xsd location="/matcher/messages.xsd"/>
    </sws:dynamic-wsdl>

    <!--This bean gets used to create EntityManagers which can be used for Repositories/DAOs-->
    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalEntityManagerFactoryBean">
        <property name="persistenceUnitName" value="matcher"/>
    </bean>
    <!--This bean gets used to manage the transactions inside the EntityManagers, without it data would not get saved as transactions are never flushed-->
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory" />
    </bean>

    <!-- Small example of how to use a factory bean in Spring. Not really necessary for this case. -->
    <bean id="matcher" factory-bean="matcherFactory" factory-method="create"/>
    <bean id="matcherFactory" class="nl.dare2date.matching.matching.MatcherFactory"/>

    <bean id="interestManager" factory-bean="interestManagerFactory" factory-method="create"/>
    <bean id="interestManagerFactory" class="nl.dare2date.matching.interests.InterestManagerFactory"/>

    <bean id="bridgedBroker" class="org.apache.activemq.broker.BrokerService"
          init-method="start" destroy-method="stop">
        <property name="brokerName" value="bridgedBroker"/>
        <property name="persistent" value="true"/>
        <property name="transportConnectorURIs">
            <value>vm://localhost:7001</value>
        </property>
        <property name="jmsBridgeConnectors">
            <bean class="org.apache.activemq.network.jms.JmsQueueConnector">
                <property name="outboundQueueConnectionFactory">
                    <bean class="org.apache.activemq.ActiveMQConnectionFactory">
                        <property name="brokerURL"
                                  value="failover:(vm://localhost:61616)?maxReconnectDelay=10" />
                    </bean>
                </property>
                <property name="outboundQueueBridges">
                    <list>
                        <bean class="org.apache.activemq.network.jms.OutboundQueueBridge">
                            <constructor-arg value="connector"/>
                        </bean>
                        <bean class="org.apache.activemq.network.jms.OutboundQueueBridge">
                            <constructor-arg value="matching"/>
                        </bean>
                    </list>
                </property>
            </bean>
        </property>
    </bean>

    <bean id="brokerConnectionFactory"
          class="org.apache.activemq.ActiveMQConnectionFactory"
          p:brokerURL="vm://localhost:7001" />

    <bean id="cachingBrokerConnectionFactory"
          class="org.springframework.jms.connection.CachingConnectionFactory"
          p:targetConnectionFactory-ref="brokerConnectionFactory"
          p:sessionCacheSize="10" />

    <bean id="matchingdestination" class="org.apache.activemq.command.ActiveMQQueue">
        <constructor-arg value="matching" />
    </bean>

    <bean id="connectordestination" class="org.apache.activemq.command.ActiveMQQueue">
        <constructor-arg value="connector" />
    </bean>

    <bean id="matchingJMSTemplate"
          class="org.springframework.jms.core.JmsTemplate"
          p:connectionFactory-ref="cachingBrokerConnectionFactory"
          p:defaultDestination-ref="matchingdestination" />

    <bean id="connectorJMSTemplate"
          class="org.springframework.jms.core.JmsTemplate"
          p:connectionFactory-ref="cachingBrokerConnectionFactory"
          p:defaultDestination-ref="connectordestination" />

</beans>